name: production
on:
  workflow_run:
    workflows: ["CI/CD Pipeline - Baguette & M√©tro"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to production environment
      run: |
        echo "üöÄ D√©ploiement vers l'environnement production"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
        
        # D√©ploiement production avec rollback automatique
        # Par exemple :
        # - kubectl apply -f k8s/production/
        # - docker-compose -f docker-compose.production.yml up -d
        # - aws ecs update-service --cluster production --service baguette-metro
        
    - name: Wait for deployment
      run: |
        echo "‚è≥ Attente du d√©ploiement..."
        sleep 60
        
    - name: Health check
      run: |
        echo "üè• V√©rification de la sant√© de l'application"
        
        # Tests de sant√© critiques
        for i in {1..5}; do
          if curl -f http://baguette-metro.fr/health; then
            echo "‚úÖ Application en ligne"
            break
          else
            echo "‚ùå Tentative $i √©chou√©e, nouvelle tentative dans 30s..."
            sleep 30
          fi
        done
        
        # Tests de sant√© API
        curl -f http://baguette-metro.fr/api/health || exit 1
        
    - name: Smoke tests
      run: |
        echo "üß™ Tests de fum√©e"
        # Tests basiques pour v√©rifier que l'application fonctionne
        python -m pytest tests/smoke/ -v
        
    - name: Performance tests
      run: |
        echo "‚ö° Tests de performance"
        # Tests de charge basiques
        # ab -n 100 -c 10 http://baguette-metro.fr/
        
    - name: Notify deployment success
      if: success()
      run: |
        echo "üéâ D√©ploiement production r√©ussi"
        echo "URL: https://baguette-metro.fr"
        echo "API: https://baguette-metro.fr/api"
        # Notification de succ√®s
        
    - name: Rollback on failure
      if: failure()
      run: |
        echo "üîÑ Rollback automatique"
        # Rollback vers la version pr√©c√©dente
        # kubectl rollout undo deployment/baguette-metro
        
    - name: Notify deployment failure
      if: failure()
      run: |
        echo "‚ùå D√©ploiement production √©chou√© - Rollback effectu√©"
        # Notification d'erreur avec rollback




